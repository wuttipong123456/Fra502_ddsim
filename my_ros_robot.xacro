<?xml version="1.0"?>
<robot name = "wut_ddsim" xmlns:xacro = "http://www.ros.org/wiki/xacro">
       
     <xacro:property name="up_rate" value="100"/>
     <xacro:property name="PI" value="3.1415926535897931"/>
     <xacro:property name="WHEEL_RADIUS" value="0.1"/>
     <xacro:property name="U_MAX" value="10.0"/>
     <xacro:property name="V_MAX" value="20.0"/>
     <xacro:property name="WHEEL_JOINT_DAMP" value="0.3"/>
     <xacro:property name="WHEEL_SEPARATION" value="0.42"/>

     <xacro:macro name="wheel" params="name translation rotation parent"> 

         <link name="${name}_wheel"> 
            <visual>
                <origin rpy="${PI/2} 0 0" xyz="0 0 0"/> 
                <geometry>
                     <cylinder radius = "${WHEEL_RADIUS}" length = "0.02"/>
                </geometry>
            </visual>
            <collision>
                <origin rpy="${PI/2} 0 0" xyz="0 0 0"/> 
                <geometry>
                     <cylinder radius = "${WHEEL_RADIUS}" length = "0.02"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="10"/>
                <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
            </inertial> 

        </link>   

        <joint name="${name}_wheel_joint" type="continuous">
            <origin xyz="${translation}" rpy="${rotation}"/>
            <parent link="${parent}"/>
            <child link="${name}_wheel"/>
            <axis xyz="0 1 0"/>
            <limit effort="${U_MAX}" velocity="${V_MAX}"/>
            <dynamics damping="${WHEEL_JOINT_DAMP}"/>
        </joint>

        <gazebo reference="${name}_wheel">
             <mu1>1.0</mu1> 
             <mu2>1.0</mu2>
        <material>Gazebo/Black</material> 
        </gazebo>       

    </xacro:macro>

    <link name="base_footprint"/>
    <joint name="base_footprint_to_base_link" type ="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin rpy="0 0 0" xyz="0 0 0.1"/>
    </joint>

    <link name="base_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
            <cylinder radius = "0.2" length = "0.1"/>
            </geometry>    
        </visual> 
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
            <cylinder radius = "0.2" length = "0.1"/>
            </geometry>    
        </collision> 
        <inertial>
            <mass value="10"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
            </inertial>

    </link>

    <xacro:wheel
        name="left"
        translation="0 0.21 0"
        rotation="0 0 0"
        parent="base_link"/>

    <xacro:wheel 
        name="right" 
        translation="0 -0.21 0" 
        rotation="0 0 0" 
        parent="base_link"/>
    
    <joint name="base_caster" type="fixed">
        <parent link="base_link"/>
        <child link="caster"/>
        <origin rpy="0 0 0" xyz="0.09 0 -0.075"/>
    </joint>

    <link name="caster">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
            <sphere radius = "0.025"/>
            </geometry>    
        </visual> 
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
            <sphere radius = "0.025"/>
            </geometry>    
        </collision> 
    </link>
 
     <gazebo reference="base_link">
        <mu1>0.3</mu1> 
        <mu2>0.3</mu2>
        <material>Gazebo/Yellow</material> 
    </gazebo>

    <gazebo reference="caster">
        <mu1>0</mu1> 
        <mu2>0</mu2>
        <material>Gazebo/Black</material> 
    </gazebo>

    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
            <updateRate>${up_rate}</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
            <leftJoint>left_wheel_joint</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
            <rightJoint>right_wheel_joint</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
            <wheelSeparation>0.42</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
            <wheelDiameter>0.2</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
            <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
            <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
            <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
            <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
            <robotBaseFrame>base_footprint</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
            <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
            <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
            <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
            <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
            <legacyMode>false</legacyMode>
        </plugin>
    </gazebo>

    <joint name="camera_joint" type="fixed">
            <axis xyz="0 1 0" />
            <origin xyz="0.215 0 0.0485" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="camera_link"/>
    </joint>

  <!-- Camera -->
    <link name="camera_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
            <box size="0.03 0.03 0.03"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
            <box size="0.03 0.03 0.03"/>
            </geometry>
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
    <update_rate>30.0</update_rate>
    <camera name="head">
    <horizontal_fov>1.3962634</horizontal_fov>
        <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
        </image>
        <clip>
            <near>0.02</near>
            <far>300</far>
        </clip>
        <noise>
        <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
        </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>

    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="0 0 0.075" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="hokuyo_link"/>
        </joint>

  <!-- Hokuyo Laser -->
    <link name="hokuyo_link">
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
        <box size="0.05 0.05 0.05"/>
        </geometry>
    </collision>

    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
        <box size="0.05 0.05 0.05"/>
        </geometry>
    </visual>

    <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    </link>

   <!-- hokuyo -->
    <gazebo reference="hokuyo_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
      <scan>
      <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
      </horizontal>
      </scan>
      <range>
            <min>0.10</min>
            <max>30.0</max>
      <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>

